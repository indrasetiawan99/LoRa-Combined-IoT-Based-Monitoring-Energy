function Decoder(bytes, port) {
  var decoded = {};
  
  //PZEM
  rawVoltage3 = bytes[0] + bytes[1] * 256;
  decoded.Voltage3 = Number((sflt162f(rawVoltage3) * 1000).toFixed(1));
  
  rawCurrent3 = bytes[2] + bytes[3] * 256;
  decoded.Current3 = Number((sflt162f(rawCurrent3) * 100).toFixed(1));
  
  rawPower3 = bytes[4] + bytes[5] * 256;
  decoded.Power3 = Number((sflt162f(rawPower3) * 100000).toFixed(1));
  
  rawPf3 = bytes[6] + bytes[7] * 256;
  decoded.Pf3 = Number((sflt162f(rawPf3) * 100).toFixed(1));
  
  rawEnergy3 = bytes[8] + bytes[9] * 256;
  decoded.Energy3 = Number((sflt162f(rawEnergy3) * 1000).toFixed(3));
  
  return decoded;
}

function sflt162f(rawSflt16){
  rawSflt16 &= 0xFFFF;
	if (rawSflt16 == 0x8000)
	return -0.0;
	
	var sSign = ((rawSflt16 & 0x8000) !== 0) ? -1 : 1;
	var exp1 = (rawSflt16 >> 11) & 0xF;
	var mant1 = (rawSflt16 & 0x7FF) / 2048.0;
	var f_unscaled = sSign * mant1 * Math.pow(2, exp1 - 15);
	return f_unscaled;
}